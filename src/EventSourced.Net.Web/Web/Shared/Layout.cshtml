@using Newtonsoft.Json
@using Newtonsoft.Json.Converters
@using Newtonsoft.Json.Serialization
<!DOCTYPE html>

<html>
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>@ViewBag.Title</title>

  @* ReSharper disable Html.TagNotResolved *@
  <environment names="Development">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/site.css" />
  </environment>
  <environment names="Staging,Production">
    <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.5/css/bootstrap.min.css"
          asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
          asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
    <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
  </environment>
  @* ReSharper restore Html.TagNotResolved *@

</head>
<body>
  @RenderBody()
  <script>
      @{
        var jsonSerializerSettings = new JsonSerializerSettings {
          ContractResolver = new CamelCasePropertyNamesContractResolver()
        };
        jsonSerializerSettings.Converters.Add(new StringEnumConverter());
      }
    window.___initialState___ = @Html.Raw(JsonConvert.SerializeObject(Model, jsonSerializerSettings));
  </script>
  @* ReSharper disable Html.TagNotResolved *@
  <environment names="Development">
    <script src="https://fb.me/react-0.14.0.js"></script>
    <script src="https://fb.me/react-dom-0.14.0.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-bootstrap/0.28.2/react-bootstrap.js"></script>
    <script src="~/bundle.client.js"></script>
  </environment>
  <environment names="Staging,Production">
    <script src="https://fb.me/react-0.14.0.min.js"></script>
    <script src="https://fb.me/react-dom-0.14.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-bootstrap/0.28.2/react-bootstrap.min.js"></script>
    <script src="~/bundle.client.js"></script>
  </environment>
  @* ReSharper restore Html.TagNotResolved *@

  @*<script>
    var heartbeat = new WebSocket("ws://localhost:3000/heartbeat");
    heartbeat.onopen = function (e) {
      console.log('WebSockets: Heartbeat ' + e.type);
    }
    heartbeat.onmessage = function (message) {
      console.log('WebSockets: ' + message.data);
    }
  </script>*@

</body>
</html>
