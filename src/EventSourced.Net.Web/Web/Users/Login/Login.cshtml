@model EventSourced.Net.Web.Users.Login.LoginViewModel
@{
  ViewData["Title"] = "Log in";
}

<h2>@ViewData["Title"].</h2>
<form id="login_form" action="/api/login" method="post" class="form-horizontal" role="form">
  <h4>Use a local account to log in.</h4>
  <hr />
  <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>
  <div class="form-group">
    <div class="col-md-4">
      <label class="control-label sr-only">Email address, phone number, or username</label>
      <input type="text" name="login" class="form-control" placeholder="Email address, phone number, or username" value="@Model.Login" />
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-4">
      <label class="control-label sr-only">Password</label>
      <input type="password" name="password" class="form-control" placeholder="Password" />
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-10">
      <button type="submit" class="btn btn-default">Log in</button>
    </div>
  </div>
  <div class="text-danger form-errors">
    <ul></ul>
  </div>
</form>


@section Scripts {
  @*
    NOTE: this is a terrible way to do client script.
    TODO: replace cshtml & viewcontrollers with redux/react spa.
  *@
  <script src="/js/login.js"></script>
}
