@model EventSourced.Net.Web.Users.Login.LoginViewModel
@{
  ViewData["Title"] = "Log in";
}

<h2>@ViewData["Title"].</h2>
<form id="login_form" action="/api/login" method="post" class="form-horizontal" role="form">
  <h4>Use a local account to log in.</h4>
  <hr />
  <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>
  <div class="form-group">
    <div class="col-md-10">
      <label class="control-label sr-only">Email address or phone number</label>
      <input type="text" name="login" class="form-control" placeholder="Email address or phone number" value="@Model.Login" />
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-10">
      <label class="control-label sr-only">Password</label>
      <input type="password" name="password" class="form-control" placeholder="Password" />
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-10">
      <button type="submit" class="btn btn-default">Log in</button>
    </div>
  </div>
  <div class="text-danger form-errors">
    <ul></ul>
  </div>
</form>


@section Scripts {
  @*
    NOTE: this is a terrible way to do client script.
    TODO: replace cshtml & viewcontrollers with redux/react spa.
  *@
  <script>
    $(document).on('ready', function () {
      var formId = 'login_form', login = 'login';
      setFocus(formId, login);
      $('#' + formId).on('submit', function () {
        var $form = $(this), data = serializeFormData($form);
        clearValidationErrors($form);
        disableForm($form);
        $.ajax({
          type: 'POST',
          url: $form.attr('action'),
          data: data
        })
          .done(function (response, status, xhr) {
            setLocation(xhr);
          })
          .fail(function (xhr) {
            enableForm($form);
            handleValidationErrors(xhr, $form);
          });
        return false;
      });

      window['validationMessages'] = {
        login: {
          empty: 'Email or phone is required.',
          unverified: 'Invalid email, phone, or password.'
        },
        password: {
          empty: 'Password is required.'
        }
      }
    });
  </script>
}