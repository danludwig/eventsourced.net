@{
  ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"].</h2>

<form id="register_form" action="/api/register" method="post" class="form-horizontal" role="form">
  <h4>Create a new account.</h4>
  <hr />
  <div class="form-group">
    <div class="col-md-10">
      <label class="control-label sr-only">Email address or phone number</label>
      <input type="text" name="emailOrPhone" class="form-control" placeholder="Email address or phone number" />
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-10">
      <button type="submit" class="btn btn-default">Register</button>
    </div>
  </div>
</form>

@section Scripts {
  @*
    NOTE: this is a terrible way to do client script.
    TODO: replace cshtml & viewcontrollers with redux/react spa.
  *@
  <script>
    $(document).on('ready', function () {
      $('#register_form').find('[name=emailOrPhone]').focus();
      $('#register_form').on('submit', function () {
        var $form = $(this), data = {};
        $form.serializeArray().map(function (x) { data[x.name] = x.value; });
        $.ajax({
          type: 'POST',
          url: '/api/register',
          data: data
        })
          .done(function (data, status, xhr) {
            console.log('POST /api/register response received.');
            var location = xhr.getResponseHeader("location");
            var socket = new WebSocket(location);
            socket.onopen = function (e) {
              console.log('WebSockets: Correlation ' + e.type);
            }
            socket.onmessage = function (message) {
              console.log('WebSockets: ' + message.data);
            }
            $form.find('[name=emailOrPhone]').val('');
          })
          .fail(function () {
            console.log('POST /api/register failed.');
          });
        return false;
      });
    });
  </script>
}