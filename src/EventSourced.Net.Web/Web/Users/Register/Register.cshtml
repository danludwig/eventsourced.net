@{
  ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"].</h2>

<form id="register_form" action="/api/register" method="post" class="form-horizontal" role="form">
  <h4>Create a new account.</h4>
  <hr />
  <div class="form-group">
    <div class="col-md-10">
      <label class="control-label sr-only">Email address or phone number</label>
      <input type="text" name="emailOrPhone" class="form-control" placeholder="Email address or phone number" />
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-10">
      <button type="submit" class="btn btn-default">Register</button>
    </div>
  </div>
  <div class="text-danger form-errors">
    <ul></ul>
  </div>
</form>

@section Scripts {
  @*
    NOTE: this is a terrible way to do client script.
    TODO: replace cshtml & viewcontrollers with redux/react spa.
  *@
  @* ReSharper disable FunctionsUsedBeforeDeclared *@
  <script>
    $(document).on('ready', function () {
      var formId = 'register_form', emailOrPhone = 'emailOrPhone';
      setFocus(formId, emailOrPhone);
      $('#' + formId).on('submit', function () {
        var $form = $(this), data = serializeFormData($form);
        clearValidationErrors($form);
        disableForm($form);
        $.ajax({
          type: 'POST',
          url: $form.attr('action'),
          data: data
        })
          .done(function (response, status, xhr) {
            var socket = getCorrelationSocket(xhr);
            socket.onopen = function (e) {
              console.log('WebSockets: Correlation ' + e.type);
            }
            socket.onmessage = function (message) {
              console.log('WebSockets: ' + message.data);
              var messageData = parseMessageData(message);
              switch (messageData.type) {
                case 'ContactEmailChallengePrepared':
                case 'ContactSmsChallengePrepared':
                  setLocation(xhr);
                  break;
                default:
                  console.log('Encountered unexpected data type "' + messageData.type + '"');
              }
            }
          })
          .fail(function (xhr) {
            enableForm($form);
            handleValidationErrors(xhr, $form);
          });
        return false;
      });

      window['validationMessages'] = {
        emailOrPhone: {
          empty: 'Email address or phone number is required.',
          invalidFormat: '"{attemptedValue}" does not appear to be a valid email address or US phone number.'
        }
      }
    });
  </script>
  @* ReSharper restore FunctionsUsedBeforeDeclared *@
}